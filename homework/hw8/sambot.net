net
{
	propagationenginegenerator1791944048146838126L = "edu.ucla.belief.approx.BeliefPropagationSettings@36b6447b";
	recoveryenginegenerator6944530267470113528l = "edu.ucla.util.SettingsImpl@784a034c";
	node_size = (130 55);
}

node LightSensor
{
	states = ("On" "Off" );
	position = (215 -424);
	excludepolicy = "include whole CPT";
	ismapvariable = "false";
	ID = "variable3";
	label = "LightSensor";
	DSLxSUBMODEL = "Root Submodel";
	diagnosistype = "AUXILIARY";
}
node SoundSensor
{
	states = ("On" "Off" );
	position = (460 -575);
	excludepolicy = "include whole CPT";
	ismapvariable = "false";
	ID = "variable2";
	label = "SoundSensor";
	DSLxSUBMODEL = "Root Submodel";
	diagnosistype = "AUXILIARY";
}
node SoundSensorHealth
{
	states = ("OK" "Broken" );
	position = (468 -740);
	excludepolicy = "include whole CPT";
	ismapvariable = "false";
	ID = "variable6";
	label = "SoundSensorHealth";
	DSLxSUBMODEL = "Root Submodel";
	diagnosistype = "AUXILIARY";
}
node ExpectingGuests
{
	states = ("Yes" "No" );
	position = (112 -73);
	excludepolicy = "include whole CPT";
	ismapvariable = "false";
	ID = "variable0";
	label = "ExpectingGuests";
	DSLxSUBMODEL = "Root Submodel";
	diagnosistype = "AUXILIARY";
}
node HearableBarking
{
	states = ("Yes" "No" );
	position = (697 -561);
	excludepolicy = "include whole CPT";
	ismapvariable = "false";
	ID = "variable4";
	label = "HearableBarking";
	DSLxSUBMODEL = "Root Submodel";
	diagnosistype = "AUXILIARY";
}
node DogBarking
{
	states = ("Yes" "No" );
	position = (872 -487);
	excludepolicy = "include whole CPT";
	ismapvariable = "false";
	ID = "variable8";
	label = "DogBarking";
	DSLxSUBMODEL = "Root Submodel";
	diagnosistype = "AUXILIARY";
}
node Battery
{
	states = ("OK" "Dead" );
	position = (420 -389);
	excludepolicy = "include whole CPT";
	ismapvariable = "false";
	ID = "variable5";
	label = "Battery";
	DSLxSUBMODEL = "Root Submodel";
	diagnosistype = "AUXILIARY";
}
node DogBowelTrouble
{
	states = ("Yes" "No" );
	position = (696 -157);
	excludepolicy = "include whole CPT";
	ismapvariable = "false";
	ID = "variable11";
	label = "DogBowelTrouble";
	DSLxSUBMODEL = "Root Submodel";
	diagnosistype = "AUXILIARY";
}
node LightSensorHealth
{
	states = ("OK" "Broken" );
	position = (257 -577);
	excludepolicy = "include whole CPT";
	ismapvariable = "false";
	ID = "variable7";
	label = "LightSensorHealth";
	DSLxSUBMODEL = "Root Submodel";
	diagnosistype = "AUXILIARY";
}
node OutdoorLight
{
	states = ("On" "Off" );
	position = (171 -297);
	excludepolicy = "include whole CPT";
	ismapvariable = "false";
	ID = "variable10";
	label = "OutdoorLight";
	DSLxSUBMODEL = "Root Submodel";
	diagnosistype = "AUXILIARY";
}
node DogOutside
{
	states = ("Yes" "No" );
	position = (661 -343);
	excludepolicy = "include whole CPT";
	ismapvariable = "false";
	ID = "variable9";
	label = "DogOutside";
	DSLxSUBMODEL = "Root Submodel";
	diagnosistype = "AUXILIARY";
}
node FamilyHome
{
	states = ("Yes" "No" );
	position = (475 -240);
	excludepolicy = "include whole CPT";
	ismapvariable = "false";
	ID = "variable1";
	label = "FamilyHome";
	DSLxSUBMODEL = "Root Submodel";
	diagnosistype = "AUXILIARY";
}
potential ( LightSensor | OutdoorLight Battery LightSensorHealth )
{
	data = ((((	0.5	0.5	)
		(	0.5	0.5	))
		((	0.5	0.5	)
		(	0.5	0.5	)))
		(((	0.5	0.5	)
		(	0.5	0.5	))
		((	0.5	0.5	)
		(	0.5	0.5	))));
}
potential ( SoundSensor | HearableBarking SoundSensorHealth Battery )
{
	data = ((((	0.5	0.5	)
		(	0.5	0.5	))
		((	0.5	0.5	)
		(	0.5	0.5	)))
		(((	0.5	0.5	)
		(	0.5	0.5	))
		((	0.5	0.5	)
		(	0.5	0.5	))));
}
potential ( SoundSensorHealth | )
{
	data = (	0.5	0.5	);
}
potential ( ExpectingGuests | )
{
	data = (	0.5	0.5	);
}
potential ( HearableBarking | )
{
	data = (	0.5	0.5	);
}
potential ( DogBarking | HearableBarking DogOutside )
{
	data = (((	0.5	0.5	)
		(	0.5	0.5	))
		((	0.5	0.5	)
		(	0.5	0.5	)));
}
potential ( Battery | )
{
	data = (	0.5	0.5	);
}
potential ( DogBowelTrouble | )
{
	data = (	0.5	0.5	);
}
potential ( LightSensorHealth | )
{
	data = (	0.5	0.5	);
}
potential ( OutdoorLight | ExpectingGuests FamilyHome )
{
	data = (((	0.5	0.5	)
		(	0.5	0.5	))
		((	0.5	0.5	)
		(	0.5	0.5	)));
}
potential ( DogOutside | DogBowelTrouble FamilyHome )
{
	data = (((	0.5	0.5	)
		(	0.5	0.5	))
		((	0.5	0.5	)
		(	0.5	0.5	)));
}
potential ( FamilyHome | ExpectingGuests )
{
	data = ((	0.5	0.5	)
		(	0.5	0.5	));
}
